# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python

name: Python
on:
  push:
  pull_request: 
    types: [ opened, synchronize ]
jobs:

  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10"]
        os: [ubuntu-20.04, macos-11, windows-2019]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: '**/requirements-test.txt'
    - name: Install python testing dependencies
      run: |
        pip install -r requirements-test.txt
    - name: Lint with black
      run: |
        black . --diff --check
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --statistics

  cli-apps:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10"]
        # TODO CLI app testing doesn't work on windows due to different handling of pexcept:
        # https://github.com/pexpect/pexpect/issues/321
        os: [ubuntu-20.04, macos-11]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: '**/requirements-test.txt'
        
    - name: Install python testing dependencies
      run: |
        pip install -r requirements-test.txt
    - name: pytest CLI multisig
      run: |
        # we run these 2x, which is a disgusting hack but GH is really buggy for CLI apps
        pytest -v test_multiwallet.py || pytest -v test_multiwallet.py
      env:
        SKIP_GH_UNRELIABLE_TESTS: True
    - name: pytest CLI singlesig
      run: |
        # we run these 2x, which is a disgusting hack but GH is really buggy for CLI apps
        pytest -v test_singlesweep.py || pytest -v test_singlesweep.py

  unit-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10"]
        os: [ubuntu-20.04, macos-11, windows-2019]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: '**/requirements-test.txt'
    - name: Install python testing dependencies
      run: |
        pip install -r requirements-test.txt
    - name: pytest fast unit tests
      if: github.event.pull_request == false
      run: |
        pytest -v -k 'not musig and not psbt' --durations=0  buidl/test 
    - name: pytest all unit tests
      if: github.event.pull_request == true
      run: |
        pytest -v --durations=0  buidl/test 
